#+TITLE: XAR EMACS CONFIG
#+AUTHOR: Mathieu 'xar' Nativel
#+EMAIL: mathieu.nativel@lse.epita.fr

* General
** Backup
   Stop creating random ~ or ## files everywhere.
   The backup files are now stored in .saves.
   #+BEGIN_SRC emacs-lisp
   (setq
      backup-by-copying t
      backup-directory-alist
      '(("." . "~/.emacs.d/backup"))
      delete-old-versions t
      kept-new-versions 6
      kept-old-versions 2
      version-control t)
   (setq auto-save-file-name-transforms
      `((".*" "~/.emacs.d/autosaves" t)))
   #+END_SRC
** Misc
   Disable all kinds of bar.
  #+BEGIN_SRC emacs-lisp
  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (global-linum-mode)
  (column-number-mode)
  (setq-default indent-tabs-mode nil)
  (setq indent-tabs-mode nil)
  (windmove-default-keybindings)
  (scroll-bar-mode -1)
  (global-hl-line-mode)
  #+END_SRC
** Info
   #+BEGIN_SRC emacs-lisp
   (setq user-full-name "Mathieu 'xar' Nativel"
         user-mailaddress "mathieu.nativel@lse.epita.fr")
   #+END_SRC
* Prog config
** General
   Basic C configuration fitting EPITA coding style.
   #+BEGIN_SRC emacs-lisp
   (setq c-basic-offset 8
         c-default-style "bsd" ; from EPITA PIE
         fill-column 80)
   (setq whitespace-style '(face ; show:
                            tabs tab-mark ; tab
                            trailing))
   (add-hook 'prog-mode-hook (lambda() (whitespace-mode 1)))
   #+END_SRC
** Common Lisp
   #+BEGIN_SRC emacs-lisp
   (load (expand-file-name "~/.quicklisp/slime-helper.el"))
   (setq inferior-lisp-program "sbcl")
   #+END_SRC
* Packages
** Packages sources
   #+BEGIN_SRC emacs-lisp
   (setq package-archives '(("gnu" . "https://elpa.gnu.org/packages/")
                            ("melpa" . "https://melpa.org/packages/")))
   #+END_SRC
** use-package
   The package refresh contents line, refresh your contents each time you load emacs.
   That way it can be quite annoying if you're not using emacs as a daemon and if you launch it multiple times through the day.
   #+BEGIN_SRC emacs-lisp
   (package-initialize)
   (unless (package-installed-p 'use-package)
     (package-refresh-contents)
     (package-install 'use-package))
   (require 'use-package)
   (require 'use-package-ensure)
   (setq use-package-always-ensure t)
   (setq use-package-verbose t)
   (setq use-package-always-ensure t)
   (use-package auto-compile
      :config
      (auto-compile-on-load-mode))
   (setq load-prefer-newer t)
   #+END_SRC
** Load general packages
   #+BEGIN_SRC emacs-lisp
   (use-package magit)
   (use-package treemacs)
   (use-package org)
   (use-package org-bullets)
   (use-package rainbow-delimiters)
   (use-package projectile)
   (use-package helm)
   (use-package helm-rg)
   (use-package helm-projectile)
   (use-package go-mode)
   (use-package markdown-mode)
   (use-package doom-themes)
   (use-package ox-reveal)
   (use-package realgud)
   #+END_SRC
* Specific package configuration
** Org-mode
   Org mode hook with org bullets:
   #+BEGIN_SRC emacs-lisp
   (require 'org-bullets)
   (add-hook 'org-mode-hook (lambda() (org-bullets-mode 1)))
   (add-hook 'org-mode-hook (lambda() (visual-line-mode 1)))
   #+END_SRC
   Highlight code when converting to pdf with latex:
   #+BEGIN_SRC emacs-lisp
   (require 'ox-latex)
   (add-to-list 'org-latex-packages-alist '("" "minted"))
   (setq org-latex-listings 'minted)
   (setq org-latex-pdf-process
   '("pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
     "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
     "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"))
   (setq org-src-fontify-natively t)
   #+END_SRC
** Projectile
   #+BEGIN_SRC emacs-lisp
   (require 'projectile)
   (define-key projectile-mode-map (kbd "C-c p") projectile-command-map)
   (projectile-mode +1)
   #+END_SRC
** Helm
   #+BEGIN_SRC emacs-lisp
   (require 'helm-projectile)
   (helm-projectile-on)
   #+END_SRC
** Rainbow-delimiters
   #+BEGIN_SRC emacs-lisp
   (add-hook 'prog-mode-hook 'rainbow-delimiters-mode)
   #+END_SRC
* Keybindings
** Helm
   #+BEGIN_SRC emacs-lisp
   (require 'helm-config)
   (define-key helm-map (kbd "TAB") 'helm-execute-persistent-action)
   (define-key helm-map (kbd "<tab>") 'helm-execute-persistent-action)
   (define-key helm-map (kbd "C-z") 'helm-select-action)

   (global-set-key (kbd "M-x") 'helm-M-x)
   (global-set-key (kbd "C-x r b") 'helm-filtered-bookmarks)
   (global-set-key (kbd "C-x C-f") 'helm-find-files)
   (global-set-key (kbd "C-x b") 'helm-mini)
   #+END_SRC
** Misc
   #+BEGIN_SRC emacs-lisp
   (global-set-key (kbd "C-c g") 'magit-status)
   (global-set-key (kbd "C-c t") 'treemacs)
   (global-set-key (kbd "M-s M-s") 'whitespace-mode)
   #+END_SRC
* Theme
  #+BEGIN_SRC emacs-lisp
  (load-theme 'doom-vibrant t)
  #+END_SRC
